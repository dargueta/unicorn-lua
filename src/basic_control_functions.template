// Copyright (C) 2017-2024 by Diego Argueta
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

#include <cstdint>

#include <unicorn/unicorn.h>

#if UC_API_MAJOR >= 2

#include "unicornlua/control_functions.hpp"
#include "unicornlua/engine.hpp"
#include "unicornlua/errors.hpp"
#include "unicornlua/integer_conversions.hpp"
#include "unicornlua/lua.hpp"
#include "unicornlua/unicornlua.hpp"
#include "unicornlua/utils.hpp"


@ for _, name in ipairs(no_arguments_return_void) do
int ul_ctl_$(name)(lua_State* L)
{
    UCLuaEngine* engine = ul_toluaengine(L, 1);

    uc_err error = uc_ctl_$(name)(engine->get_handle());
    if (error != UC_ERR_OK)
        ul_crash_on_error(L, error);
    return 0;
}
@ end

@ for name, info in pairs(no_arguments_scalar_return) do
int ul_ctl_$(name)(lua_State* L)
{
    UCLuaEngine* engine = ul_toluaengine(L, 1);
    uc_engine* handle = engine->get_handle();
    $(info.c_type) result;

    uc_err error = uc_ctl_$(name)(handle, &result);
    if (error != UC_ERR_OK)
        ul_crash_on_error(L, error);

    ul_push_$(info.c_type)_equiv(L, static_cast<ul_lua_$(info.c_type)_equiv_type>(result));
    return 1;
}
@ end

@ for name, arguments in pairs(scalar_arguments_return_void) do
int ul_ctl_$(name)(lua_State* L)
{
    UCLuaEngine* engine = ul_toluaengine(L, 1);
    uc_engine* handle = engine->get_handle();

@ for i, arg_info in ipairs(arguments) do
    auto arg_$(i) = static_cast<$(arg_info.c_type)>(ul_to_$(arg_info.c_type)_equiv(L, $(i + 1)));
@ end

    uc_err error = uc_ctl_$(name)(
        handle
@ for i = 1, #arguments, 1 do
    , arg_$(i)
@ end
    );
    if (error != UC_ERR_OK)
        ul_crash_on_error(L, error);
    return 0;
}
@ end

#endif // UC_API_MAJOR
