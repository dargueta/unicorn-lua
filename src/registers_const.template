// Copyright (C) 2017-2024 by Diego Argueta
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

#include <unicorn/unicorn.h>

#include "unicornlua/lua.hpp"
#include "unicornlua/registers.hpp"
#include "unicornlua/utils.hpp"


static constexpr struct NamedIntConst kConstants[] {
@ for _, bits in ipairs({8, 16, 32, 64}) do
    {"REG_TYPE_INT$(bits)", UL_REG_TYPE_INT$(bits)},
@ end
@ for _, bits in ipairs({32, 64}) do
    {"REG_TYPE_FLOAT$(bits)", UL_REG_TYPE_FLOAT$(bits)},
@ end
@ for _, conf in ipairs(int_arrays) do
    {"REG_TYPE_INT$(conf.bits)_ARRAY_$(conf.count)", UL_REG_TYPE_INT$(conf.bits)_ARRAY_$(conf.count)},
@ end
@ for _, conf in ipairs(float_arrays) do
    {"REG_TYPE_FLOAT$(conf.bits)_ARRAY_$(conf.count)", UL_REG_TYPE_FLOAT$(conf.bits)_ARRAY_$(conf.count)},
@ end
    {"REG_TYPE_FLOAT80", UL_REG_TYPE_FLOAT80},
    {nullptr, 0}
};


extern "C" UNICORN_EXPORT int luaopen_unicorn_registers_const(lua_State *L) {
    lua_createtable(L, 0, $(#int_arrays + #float_arrays + 7));
    load_int_constants(L, kConstants);
    return 1;
}
