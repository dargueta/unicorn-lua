# WARNING: This makefile is intended to be invoked by LuaRocks, not manually.

!IFNDEF LIB_EXTENSION
	LIB_EXTENSION=dll
!ENDIF

!IFNDEF UNICORN_INCDIR
	UNICORN_INCDIR=C:\Windows\System32\include
!ENDIF

BUILD_DIR=.\build

!IFNDEF LUAROCKS
	LUAROCKS=luarocks
!ENDIF

ARCHITECTURE_HEADERS=$(wildcard $(UNICORN_INCDIR)\unicorn\*.h)
ARCHITECTURE_SLUGS=$(filter-out platform,$(basename $(notdir $(ARCHITECTURE_HEADERS))))

CONSTS_DIR=src\constants
CONSTANT_FILES=$(foreach s,$(ARCHITECTURE_SLUGS),$(CONSTS_DIR)\$(s)_const.cpp)

LIB_CPP_SOURCES=$(wildcard src\*.cpp) $(CONSTANT_FILES)
LIB_OBJECT_FILES=$(LIB_CPP_SOURCES:.cpp=.obj) $(CONSTANT_FILES:.cpp=.obj)

TEST_CPP_SOURCES=$(wildcard tests\c\*.cpp)
TEST_LUA_SOURCES=$(wildcard tests\lua\*.lua)
TEST_HEADERS=$(wildcard tests\c\*.h)
TEST_CPP_OBJECT_FILES=$(TEST_CPP_SOURCES:.cpp=.obj)
TEST_EXECUTABLE=$(BUILD_DIR)\cpp_test

LIB_BUILD_TARGET=$(BUILD_DIR)\unicorn.$(LIB_EXTENSION)

!IFNDEF LUA_LIBDIR
	LUA_LIBDIR=$(shell $(LUAROCKS) config variables.LUA_LIBDIR)
!ENDIF

!IFNDEF LUA_INCDIR
	LUA_INCDIR=$(shell $(LUAROCKS) config variables.LUA_INCDIR)
!ENDIF

!IFNDEF UNICORN_LIBDIR
	UNICORN_LIBDIR=C:\Windows\System32
!ENDIF

OTHER_CXXFLAGS=/std:c11
WARN_FLAGS=/Wall /WX /wd4820 /wd5045 /external:anglebrackets /external:W0
INCLUDE_PATH_FLAGS=/I$(CURDIR)/include /I$(LUA_INCDIR) /I$(UNICORN_INCDIR)
LIB_PATH_FLAGS=/LIBPATH:$(LUA_LIBDIR)

CXX_CMD=$(CXX) $(OTHER_CXXFLAGS) $(WARN_FLAGS) $(INCLUDE_PATH_FLAGS)
LINK_CMD=$(LINK) $(LIB_PATH_FLAGS)

SET_SEARCH_PATHS=eval "$$($(LUAROCKS) path)"


.PHONY: build
build: $(LIB_BUILD_TARGET) $(TEST_EXECUTABLE)


.PHONY: install
install: $(LIB_BUILD_TARGET)
	install $^ $(INST_LIBDIR)


.PHONY: clean
clean:
	$(RM) $(LIB_OBJECT_FILES) $(CONSTANT_FILES) $(LIB_BUILD_TARGET)
	$(RM) $(TEST_EXECUTABLE) $(TEST_CPP_OBJECT_FILES)
	$(RM) -r $(BUILD_DIR) $(CONSTS_DIR)


.PHONY: test
test: $(TEST_EXECUTABLE) $(TEST_LUA_SOURCES)
	$(SET_SEARCH_PATHS); $(TEST_EXECUTABLE)
	$(SET_SEARCH_PATHS); busted --cpath="$(BUILD_DIR)/?.$(LIB_EXTENSION)" -p lua tests\lua


$(LIB_BUILD_TARGET): $(LIB_OBJECT_FILES) | $(BUILD_DIR)
	$(LINK_CMD) $(LIBFLAG) /OUT:$@ $^ /DEFAULTLIB:unicorn


$(TEST_EXECUTABLE): $(TEST_CPP_OBJECT_FILES) $(LIB_OBJECT_FILES) | $(TEST_HEADERS)
	$(LINK_CMD) /OUT:$@ $^ /DEFAULTLIB:unicorn


$(CONSTS_DIR)\%_const.cpp: $(UNICORN_INCDIR)\unicorn\%.h | $(CONSTS_DIR)
	python3 tools\generate_constants.py $< $@


# We're deliberately omitting CXXFLAGS as provided by LuaRocks because it includes
# "-fPIC" and we don't want that for the test binary.
tests\c\%.obj: tests\c\%.cpp
	$(CXX_CMD) /DEFAULTLIB:$(LUALIB) /c /OUT:$@ $^


src\%.obj: src\%.cpp
	$(CXX_CMD) $(CXXFLAGS) /c /OUT:$@ $^


$(CONSTS_DIR):
	$(MKDIR) $@


# Provided for completeness; we should never need this as LuaRocks creates it
# for us.
$(BUILD_DIR):
	$(MKDIR) $@
