# WARNING: This makefile is intended to be invoked by LuaRocks, not manually.

!IFNDEF LIB_EXTENSION
	LIB_EXTENSION=dll
!ENDIF

!IFNDEF UNICORN_INCDIR
	UNICORN_INCDIR=C:\Windows\System32\include
!ENDIF

!INCLUDE <common-variables.mk>

LUA_LIBDIR ?= $(shell $(LUAROCKS) config variables.LUA_LIBDIR)
LUA_INCDIR ?= $(shell $(LUAROCKS) config variables.LUA_INCDIR)
UNICORN_LIBDIR ?= C:\Windows\System32

OTHER_CXXFLAGS := /std:c11
WARN_FLAGS := /Wall /WX /wd4820 /wd5045 /external:anglebrackets /external:W0
INCLUDE_PATH_FLAGS := /I$(CURDIR)/include /I$(LUA_INCDIR) /I$(UNICORN_INCDIR)
LIB_PATH_FLAGS := /LIBPATH:$(LUA_LIBDIR)

CXX_CMD = $(CXX) $(OTHER_CXXFLAGS) $(WARN_FLAGS) $(INCLUDE_PATH_FLAGS)
LINK_CMD = $(LINK) $(LIB_PATH_FLAGS)

SET_SEARCH_PATHS = eval "$$($(LUAROCKS) path)"


default: build

!INCLUDE <common-recipes.mk>


.PHONY: install
install: $(LIB_BUILD_TARGET)
	install $^ $(INST_LIBDIR)


.PHONY: test
test: $(TEST_EXECUTABLE) $(TEST_LUA_SOURCES)
	$(SET_SEARCH_PATHS); $(TEST_EXECUTABLE)
	$(SET_SEARCH_PATHS); busted --cpath="$(BUILD_DIR)/?.$(LIB_EXTENSION)" -p lua tests/lua


$(LIB_BUILD_TARGET): $(LIB_OBJECT_FILES) | $(BUILD_DIR)
	$(LINK_CMD) $(LIBFLAG) /OUT:$@ $^ /DEFAULTLIB:unicorn


$(TEST_EXECUTABLE): $(TEST_CPP_OBJECT_FILES) $(LIB_OBJECT_FILES) | $(TEST_HEADERS)
	$(LINK_CMD) /OUT:$@ $^ /DEFAULTLIB:unicorn


# We're deliberately omitting CXXFLAGS as provided by LuaRocks because it includes
# "-fPIC" and we don't want that for the test binary.
tests/c/%.obj: tests/c/%.cpp
	$(CXX_CMD) /DEFAULTLIB:$(LUALIB) /c /OUT:$@ $^


src/%.obj: src/%.cpp
	$(CXX_CMD) $(CXXFLAGS) /c /OUT:$@ $^


include common-recipes.mk
